(self.webpackChunkshell=self.webpackChunkshell||[]).push([[245],{6245:(O,R,v)=>{v.r(R),v.d(R,{AuthService:()=>M,CoreServicesComponent:()=>I,CoreServicesService:()=>y,DummyDataService:()=>D,EventBusService:()=>L,MfeLoaderService:()=>C,RoleService:()=>j,UserRole:()=>u,hasRequiredRole:()=>E});var c=v(5565);let y=(()=>{class o{constructor(){}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275prov=c.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})();var S=v(467),h=v(2485),b=v(1663);let M=(()=>{class o{constructor(e){this.http=e,this.id="auth of pokemon",this.ISSUER_BASE_URL="https://topfix-wrczmn.us1.zitadel.cloud",this.CLIENT_ID="336777344075263315",this.REDIRECT_URI="https://opensourcekd.github.io/i17e/auth-callback",this.SCOPE="openid profile email",this.TOKEN_KEY="zitadel_token",this.USER_INFO_KEY="zitadel_user_info",this.userSubject=new h.BehaviorSubject(this.getUserInfoFromStorage()),this.user$=this.userSubject.asObservable()}login(e){this.redirectToZitadelLogin()}redirectToZitadelLogin(){const e=new URL(`${this.ISSUER_BASE_URL}/oauth/v2/authorize`),t=this.generateRandomState(),s=this.generateCodeVerifier();sessionStorage.setItem("oauth_state",t),sessionStorage.setItem("code_verifier",s),e.searchParams.append("client_id",this.CLIENT_ID),e.searchParams.append("redirect_uri",this.REDIRECT_URI),e.searchParams.append("response_type","code"),e.searchParams.append("scope",this.SCOPE),e.searchParams.append("state",t),window.location.href=e.toString()}handleCallback(e,t){var s=this;return(0,S.A)(function*(){const r=sessionStorage.getItem("oauth_state");if(t!==r)return console.error("[AuthService] State mismatch - possible CSRF attack"),!1;try{const n=yield s.exchangeCodeForToken(e);s.setToken(n.access_token);const a=s.decodeIdToken(n.id_token);return s.setUserInfo(a),sessionStorage.removeItem("oauth_state"),sessionStorage.removeItem("code_verifier"),console.log("[AuthService] Authentication successful"),!0}catch(n){return console.error("[AuthService] Error exchanging code for token:",n),!1}})()}exchangeCodeForToken(e){var t=this;return(0,S.A)(function*(){const s=`${t.ISSUER_BASE_URL}/oauth/v2/token`,r=new URLSearchParams({grant_type:"authorization_code",code:e,redirect_uri:t.REDIRECT_URI,client_id:t.CLIENT_ID}),n=yield fetch(s,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:r.toString()});if(!n.ok)throw new Error(`Token exchange failed: ${n.statusText}`);return n.json()})()}decodeIdToken(e){try{const t=e.split(".")[1],s=JSON.parse(atob(t));return{sub:s.sub,name:s.name,email:s.email}}catch(t){return console.error("[AuthService] Error decoding ID token:",t),{sub:""}}}logout(){localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_INFO_KEY),this.userSubject.next(null),console.log("[AuthService] User logged out")}getToken(){return localStorage.getItem(this.TOKEN_KEY)}setToken(e){localStorage.setItem(this.TOKEN_KEY,e)}isAuthenticated(){return!!this.getToken()}getUser(){return this.userSubject.value}getUserInfoFromStorage(){const e=localStorage.getItem(this.USER_INFO_KEY);return e?JSON.parse(e):null}setUserInfo(e){localStorage.setItem(this.USER_INFO_KEY,JSON.stringify(e)),this.userSubject.next(e)}generateRandomState(){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}generateCodeVerifier(){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}static{this.\u0275fac=function(t){return new(t||o)(c.\u0275\u0275inject(b.HttpClient))}}static{this.\u0275prov=c.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})(),I=(()=>{class o{static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275cmp=c.\u0275\u0275defineComponent({type:o,selectors:[["org-core-services"]],standalone:!0,features:[c.\u0275\u0275StandaloneFeature],decls:2,vars:0,template:function(t,s){1&t&&(c.\u0275\u0275elementStart(0,"p"),c.\u0275\u0275text(1," core-services works! "),c.\u0275\u0275elementEnd())}})}}return o})();var u=function(o){return o.SUPER_ADMIN="super-admin",o.ORG_ADMIN="org-admin",o.TEAM_LEAD="team-lead",o.SALES_EXECUTIVE="sales-executive",o}(u||{});function E(o,U){const e={[u.SUPER_ADMIN]:4,[u.ORG_ADMIN]:3,[u.TEAM_LEAD]:2,[u.SALES_EXECUTIVE]:1};return e[o]>=e[U]}let j=(()=>{class o{constructor(){this.currentUserSubject=new h.BehaviorSubject(null),this.currentUser$=this.currentUserSubject.asObservable(),console.log("[RoleService] Service initialized"),this.loadDummyUser()}loadDummyUser(){console.log("[RoleService] Loading user from session storage");const e=sessionStorage.getItem("current_user");if(e){const t=JSON.parse(e);console.log("[RoleService] User loaded from session:",t),this.currentUserSubject.next(t)}else{const t={id:"1",name:"John Doe",email:"john.doe@example.com",role:u.ORG_ADMIN};console.log("[RoleService] No saved user found, using default:",t),this.setCurrentUser(t)}}setCurrentUser(e){console.log("[RoleService] Setting current user:",e),this.currentUserSubject.next(e),e?(sessionStorage.setItem("current_user",JSON.stringify(e)),console.log("[RoleService] User saved to session storage")):(sessionStorage.removeItem("current_user"),console.log("[RoleService] User removed from session storage"))}getCurrentUser(){const e=this.currentUserSubject.value;return console.log("[RoleService] getCurrentUser() called, returning:",e),e}getCurrentUserRole(){const e=this.currentUserSubject.value?.role||null;return console.log("[RoleService] getCurrentUserRole() called, returning:",e),e}hasRole(e){const t=this.getCurrentUserRole();if(!t)return console.log("[RoleService] hasRole() - No current role, access denied"),!1;const s=E(t,e);return console.log(`[RoleService] hasRole() - Checking if ${t} has ${e}:`,s),s}canViewOthersData(){const e=this.getCurrentUserRole(),t=e===u.SUPER_ADMIN||e===u.ORG_ADMIN||e===u.TEAM_LEAD;return console.log(`[RoleService] canViewOthersData() - Role: ${e}, Can view:`,t),t}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275prov=c.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})(),D=(()=>{class o{constructor(){this.salesExecutivesSubject=new h.BehaviorSubject(this.generateSalesExecutives()),this.salesExecutives$=this.salesExecutivesSubject.asObservable(),this.salesRecordsSubject=new h.BehaviorSubject(this.generateSalesRecords()),this.salesRecords$=this.salesRecordsSubject.asObservable(),this.incentiveRulesSubject=new h.BehaviorSubject(this.generateIncentiveRules()),this.incentiveRules$=this.incentiveRulesSubject.asObservable(),this.incentivesEarnedSubject=new h.BehaviorSubject(this.generateIncentivesEarned()),this.incentivesEarned$=this.incentivesEarnedSubject.asObservable(),console.log("[DummyDataService] Service initialized"),console.log("[DummyDataService] Generated data:",{salesExecutives:this.salesExecutivesSubject.value.length,salesRecords:this.salesRecordsSubject.value.length,incentiveRules:this.incentiveRulesSubject.value.length,incentivesEarned:this.incentivesEarnedSubject.value.length})}generateSalesExecutives(){return console.log("[DummyDataService] Generating sales executives"),[{id:"1",name:"John Doe",email:"john.doe@example.com",teamId:"team1"},{id:"2",name:"Jane Smith",email:"jane.smith@example.com",teamId:"team1"},{id:"3",name:"Bob Johnson",email:"bob.johnson@example.com",teamId:"team2"},{id:"4",name:"Alice Williams",email:"alice.williams@example.com",teamId:"team2"},{id:"5",name:"Charlie Brown",email:"charlie.brown@example.com",teamId:"team1"}]}generateSalesRecords(){console.log("[DummyDataService] Generating sales records");const e=[],t=this.generateSalesExecutives(),s=["Product A","Product B","Product C","Product D"],r=["completed","pending","cancelled"];for(let n=0;n<50;n++){const a=t[n%t.length],d=Math.floor(n/10),l=new Date;l.setMonth(l.getMonth()-d),e.push({id:`sale-${n+1}`,salesExecutiveId:a.id,salesExecutiveName:a.name,date:l,productName:s[n%s.length],amount:Math.floor(5e4*Math.random())+1e4,quantity:Math.floor(10*Math.random())+1,status:r[n%3]})}return e}generateIncentiveRules(){return console.log("[DummyDataService] Generating incentive rules"),[{id:"rule-1",name:"Basic Sales Incentive",description:"5% incentive on all sales",type:"percentage",value:5,isActive:!0,createdBy:"admin",createdAt:new Date("2024-01-01")},{id:"rule-2",name:"High Value Sales Bonus",description:"10% incentive on sales above $50,000",type:"percentage",value:10,minSalesAmount:5e4,isActive:!0,createdBy:"admin",createdAt:new Date("2024-02-01")},{id:"rule-3",name:"Product A Special",description:"Fixed $500 bonus for Product A sales",type:"fixed",value:500,productCategory:"Product A",isActive:!0,createdBy:"team-lead-1",createdAt:new Date("2024-03-01")},{id:"rule-4",name:"Tiered Volume Incentive",description:"15% incentive on sales above $100,000",type:"tiered",value:15,minSalesAmount:1e5,isActive:!1,createdBy:"admin",createdAt:new Date("2024-04-01")}]}generateIncentivesEarned(){console.log("[DummyDataService] Generating incentives earned");const e=[],t=this.generateSalesExecutives(),s=this.generateIncentiveRules(),r=["pending","approved","paid"];for(let n=0;n<30;n++){const a=t[n%t.length],d=s[n%s.length],l=Math.floor(n/10),i=new Date;i.setMonth(i.getMonth()-l),e.push({id:`incentive-${n+1}`,salesExecutiveId:a.id,salesExecutiveName:a.name,ruleId:d.id,ruleName:d.name,salesRecordId:`sale-${n+1}`,amount:Math.floor(5e3*Math.random())+500,earnedDate:i,status:r[n%3]})}return e}getSalesRecordsForExecutive(e){console.log("[DummyDataService] getSalesRecordsForExecutive() called for:",e);const t=this.salesRecordsSubject.value.filter(s=>s.salesExecutiveId===e);return console.log("[DummyDataService] Found",t.length,"sales records for executive:",e),t}getIncentivesForExecutive(e){console.log("[DummyDataService] getIncentivesForExecutive() called for:",e);const t=this.incentivesEarnedSubject.value.filter(s=>s.salesExecutiveId===e);return console.log("[DummyDataService] Found",t.length,"incentives for executive:",e),t}getReportDataForExecutive(e){console.log("[DummyDataService] getReportDataForExecutive() called for:",e);const t=this.salesExecutivesSubject.value.find(i=>i.id===e),s=this.getSalesRecordsForExecutive(e),r=this.getIncentivesForExecutive(e),n=s.filter(i=>"completed"===i.status).reduce((i,g)=>i+g.amount,0),a=r.filter(i=>"pending"!==i.status).reduce((i,g)=>i+g.amount,0),d=[];for(let i=5;i>=0;i--){const g=new Date;g.setMonth(g.getMonth()-i);const f=g.toISOString().substring(0,7),F=s.filter(m=>m.date.toISOString().substring(0,7)===f&&"completed"===m.status).reduce((m,p)=>m+p.amount,0),N=r.filter(m=>m.earnedDate.toISOString().substring(0,7)===f&&"pending"!==m.status).reduce((m,p)=>m+p.amount,0);d.push({month:f,sales:F,incentives:N})}const l={salesExecutiveId:e,salesExecutiveName:t?.name||"Unknown",totalSales:n,totalIncentives:a,period:"Last 6 months",breakdown:d};return console.log("[DummyDataService] Report data generated:",l),l}getSalesExecutives(){const e=this.salesExecutivesSubject.value;return console.log("[DummyDataService] getSalesExecutives() called, returning",e.length,"executives"),e}getIncentiveRules(){const e=this.incentiveRulesSubject.value;return console.log("[DummyDataService] getIncentiveRules() called, returning",e.length,"rules"),e}addIncentiveRule(e){console.log("[DummyDataService] addIncentiveRule() called with:",e),this.incentiveRulesSubject.next([...this.incentiveRulesSubject.value,e]),console.log("[DummyDataService] Rule added successfully, total rules:",this.incentiveRulesSubject.value.length)}updateIncentiveRule(e,t){console.log("[DummyDataService] updateIncentiveRule() called for rule:",e,"with updates:",t);const r=this.incentiveRulesSubject.value.map(n=>n.id===e?{...n,...t}:n);this.incentiveRulesSubject.next(r),console.log("[DummyDataService] Rule updated successfully")}deleteIncentiveRule(e){console.log("[DummyDataService] deleteIncentiveRule() called for rule:",e);const s=this.incentiveRulesSubject.value.filter(r=>r.id!==e);this.incentiveRulesSubject.next(s),console.log("[DummyDataService] Rule deleted successfully, remaining rules:",this.incentiveRulesSubject.value.length)}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275prov=c.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})();var x=v(1913);let C=(()=>{class o{constructor(){this.mfeConfigs=[],this.loadedMfesSubject=new h.BehaviorSubject(new Set),this.loadedMfes$=this.loadedMfesSubject.asObservable(),this.loadingMfesSubject=new h.BehaviorSubject(new Set),this.loadingMfes$=this.loadingMfesSubject.asObservable(),console.log("[MfeLoaderService] Service initialized")}setConfigs(e){console.log("[MfeLoaderService] setConfigs() called with",e.length,"configurations"),this.mfeConfigs=e.sort((t,s)=>s.priority-t.priority),console.log("[MfeLoaderService] Configurations sorted by priority:",this.mfeConfigs.map(t=>({name:t.name,priority:t.priority})))}getConfigs(){return console.log("[MfeLoaderService] getConfigs() called, returning",this.mfeConfigs.length,"configurations"),this.mfeConfigs}getConfigsForRole(e){console.log("[MfeLoaderService] getConfigsForRole() called for role:",e);const t=this.mfeConfigs.filter(s=>s.allowedRoles.includes(e));return console.log("[MfeLoaderService] Found",t.length,"configurations for role:",e,t.map(s=>s.name)),t}getConfigByName(e){console.log("[MfeLoaderService] getConfigByName() called for:",e);const t=this.mfeConfigs.find(s=>s.name===e);return t?console.log("[MfeLoaderService] Found configuration for:",e):console.warn("[MfeLoaderService] Configuration not found for:",e),t}preloadPriorityMfes(e){var t=this;return(0,S.A)(function*(){console.log("[MfeLoaderService] preloadPriorityMfes() called for role:",e);const r=t.getConfigsForRole(e).filter(a=>a.priority>=5);console.log("[MfeLoaderService] Preloading",r.length,"priority MFEs:",r.map(a=>({name:a.name,priority:a.priority})));const n=r.map(a=>t.loadMfe(a));yield Promise.all(n),console.log("[MfeLoaderService] Preloading complete")})()}loadMfe(e){var t=this;return(0,S.A)(function*(){const s=t.loadingMfesSubject.value,r=t.loadedMfesSubject.value;if(r.has(e.name))console.log(`[MfeLoaderService] MFE ${e.name} already loaded`);else if(s.has(e.name))console.log(`[MfeLoaderService] MFE ${e.name} is already loading`);else try{const n=new Set(s);n.add(e.name),t.loadingMfesSubject.next(n),console.log(`[MfeLoaderService] Loading MFE ${e.name} (priority: ${e.priority})`),console.log("[MfeLoaderService] MFE config:",{name:e.name,url:e.url,exposedModule:e.exposedModule,remoteName:e.remoteName});const a=yield(0,x.loadRemoteModule)({type:"module",remoteEntry:e.url,exposedModule:e.exposedModule}),d=new Set(r);d.add(e.name),t.loadedMfesSubject.next(d);const l=new Set(t.loadingMfesSubject.value);return l.delete(e.name),t.loadingMfesSubject.next(l),console.log(`[MfeLoaderService] Successfully loaded MFE ${e.name}`),console.log("[MfeLoaderService] Currently loaded MFEs:",Array.from(t.loadedMfesSubject.value)),a}catch(n){console.error(`[MfeLoaderService] Error loading MFE ${e.name}:`,n),console.error("[MfeLoaderService] Failed config:",{name:e.name,url:e.url,exposedModule:e.exposedModule});const a=new Set(t.loadingMfesSubject.value);throw a.delete(e.name),t.loadingMfesSubject.next(a),n}})()}isMfeLoaded(e){const t=this.loadedMfesSubject.value.has(e);return console.log(`[MfeLoaderService] isMfeLoaded(${e}):`,t),t}isMfeLoading(e){const t=this.loadingMfesSubject.value.has(e);return console.log(`[MfeLoaderService] isMfeLoading(${e}):`,t),t}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275prov=c.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})();var w=v(762),A=v.n(w);let L=(()=>{class o{constructor(){this.emitter=A()(),console.log("[EventBusService] Service initialized");const e=new Event("EventBusServiceCreated");this.onePlusNEvents=new h.ReplaySubject(100),this.onePlusNEvents.next(e.type),this.emitter.on("*",t=>{console.log("[EventBusService] Event received and forwarded to ReplaySubject:",t),this.onePlusNEvents.next(t)}),console.log("[EventBusService] Event listener registered for all events")}sendEvent(e){console.log("[EventBusService] sendEvent() called with:",e),this.emitter.emit(e),console.log("[EventBusService] Event emitted successfully")}static{this.\u0275fac=function(t){return new(t||o)}}static{this.\u0275prov=c.\u0275\u0275defineInjectable({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})()}}]);