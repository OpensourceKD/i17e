{"version":3,"file":"20.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.routes.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/mfe-wrapper/mfe-wrapper.component.ts","./src/app/components/mfe-wrapper/mfe-wrapper.component.html","./src/app/guards/role.guard.ts","./src/app/pages/reports-page/reports-page.component.ts","./src/app/pages/reports-page/reports-page.component.html","./src/app/pages/rules-page/rules-page.component.ts","./src/app/pages/rules-page/rules-page.component.html","./src/app/pages/sales-page/sales-page.component.ts","./src/app/pages/sales-page/sales-page.component.html","./src/app/services/authentication.service.ts","./src/app/services/cache-api.service.ts","./src/bootstrap.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet, Params, ActivatedRoute, Router } from '@angular/router';\nimport { AuthService } from '@org/core-services'; \nimport { AuthenticationService } from './services/authentication.service';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { firstValueFrom } from 'rxjs';\nimport { RoleService, MfeLoaderService } from '@org/core-services';\nimport { MFE_CONFIGS } from '../configs/mfe';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\n\n/**\n * Root application component\n * Initializes MFE configuration and manages authentication callback\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  imports: [RouterOutlet, CommonModule, FormsModule, HeaderComponent, FooterComponent],\n  standalone: true,\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'Incentive Management System';\n\n  constructor(\n    public auth2: AuthenticationService, \n    private auth: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private roleService: RoleService,\n    private mfeLoader: MfeLoaderService\n  ){\n    // Initialize MFE configs\n    this.mfeLoader.setConfigs(MFE_CONFIGS);\n  }\n\n  async ngOnInit(): Promise<void> {\n    // Use window.location.search for hash-based routing fallback\n    let code: string | null = null;\n    let state: string | null = null;\n    let error: string | null = null;\n\n    // Try Angular queryParams first\n    const params: Params = await firstValueFrom(this.route.queryParams);\n    if (params && Object.keys(params).length > 0) {\n      code = params['code'] ?? null;\n      state = params['state'] ?? null;\n      error = params['error'] ?? null;\n    } else {\n      // Fallback for hash-based routing: parse window.location.search\n      const urlParams = new URLSearchParams(window.location.search);\n      code = urlParams.get('code');\n      state = urlParams.get('state');\n      error = urlParams.get('error');\n    }\n\n    // Auth callback handling - navigation commented out as per requirements\n    // if (error) {\n    //   console.error('Authentication failed:', error);\n    //   // TODO: Uncomment when ready - setTimeout(() => this.router.navigate(['/']), 3000);\n    //   return;\n    // }\n\n    // if (code && state) {\n    //   try {\n    //     const success = await this.auth.handleCallback(code, state);\n    //     if (success) {\n    //       console.log('Authentication successful');\n    //       // TODO: Uncomment when ready - setTimeout(() => this.router.navigate(['/']), 1500);\n    //     } else {\n    //       console.error('Authentication failed');\n    //       // TODO: Uncomment when ready - setTimeout(() => this.router.navigate(['/']), 3000);\n    //     }\n    //   } catch (e) {\n    //     console.error('Authentication failed (exception):', e);\n    //     // TODO: Uncomment when ready - setTimeout(() => this.router.navigate(['/']), 3000);\n    //   }\n    // }\n  }\n}\n","<div class=\"app-container\">\n  <app-header></app-header>\n\n  <main class=\"app-content\">\n    <router-outlet />\n  </main>\n\n  <app-footer></app-footer>\n</div>\n\n","import { loadRemoteModule } from '@angular-architects/module-federation';\nimport { Routes } from '@angular/router';\nimport { roleGuard, adminGuard, allRolesGuard } from './guards/role.guard';\nimport { UserRole } from '@org/core-services';\nimport { RulesPageComponent } from './pages/rules-page/rules-page.component';\nimport { SalesPageComponent } from './pages/sales-page/sales-page.component';\nimport { ReportsPageComponent } from './pages/reports-page/reports-page.component';\n\n/**\n * Application routes with role-based access control\n * Each route is protected by guards that check user roles against MFE allowedRoles\n */\nexport const routes: Routes = [\n    {\n        path: 'rules',\n        component: RulesPageComponent,\n        canActivate: [adminGuard]\n    },\n    {\n        path: 'sales',\n        component: SalesPageComponent,\n        canActivate: [allRolesGuard]\n    },\n    {\n        path: 'reports',\n        component: ReportsPageComponent,\n        canActivate: [allRolesGuard]\n    },\n    { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n","import { Component } from '@angular/core';\n\n/**\n * Footer component for the application\n */\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n  currentYear = new Date().getFullYear();\n}\n","<footer class=\"app-footer\">\n  <p>&copy; {{ currentYear }} Incentive Management System. All rights reserved.</p>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { RoleService, DummyDataService, MfeLoaderService, User, SalesExecutive, MfeConfig } from '@org/core-services';\nimport { AuthService } from '@org/core-services';\n\n/**\n * Header component for the application\n * Displays user information, role-based navigation, and user selection for admins\n */\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, RouterLinkActive],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent implements OnInit {\n  currentUser: User | null = null;\n  availableMfes: MfeConfig[] = [];\n  salesExecutives: SalesExecutive[] = [];\n  selectedSalesExecutiveId: string = '';\n  canViewOthers: boolean = false;\n\n  constructor(\n    private roleService: RoleService,\n    private dummyDataService: DummyDataService,\n    private mfeLoader: MfeLoaderService,\n    private auth: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.roleService.currentUser$.subscribe(user => {\n      this.currentUser = user;\n      if (user) {\n        this.selectedSalesExecutiveId = user.id;\n        this.canViewOthers = this.roleService.canViewOthersData();\n        this.updateAvailableMfes();\n        this.loadSalesExecutives();\n      }\n    });\n  }\n\n  /**\n   * Update available MFEs based on current user role\n   */\n  private updateAvailableMfes(): void {\n    if (!this.currentUser) {\n      this.availableMfes = [];\n      return;\n    }\n    this.availableMfes = this.mfeLoader.getConfigsForRole(this.currentUser.role);\n  }\n\n  /**\n   * Load sales executives for selection (admin/team lead only)\n   */\n  private loadSalesExecutives(): void {\n    if (this.canViewOthers) {\n      this.salesExecutives = this.dummyDataService.getSalesExecutives();\n    }\n  }\n\n  /**\n   * Handle sales executive selection change\n   */\n  onSalesExecutiveChange(): void {\n    sessionStorage.setItem('selected_sales_executive_id', this.selectedSalesExecutiveId);\n    window.dispatchEvent(new CustomEvent('salesExecutiveChanged', { \n      detail: { salesExecutiveId: this.selectedSalesExecutiveId } \n    }));\n  }\n\n  /**\n   * Handle logout action\n   */\n  logout(): void {\n    this.auth.logout();\n    this.roleService.setCurrentUser(null);\n  }\n\n  /**\n   * Handle login action\n   */\n  login(): void {\n    this.auth.login();\n  }\n}\n","<header class=\"app-header\">\n  <div class=\"header-left\">\n    <h1 class=\"app-title\">Incentive Management System</h1>\n  </div>\n  \n  <div class=\"header-center\" *ngIf=\"currentUser && canViewOthers\">\n    <div class=\"user-selector\">\n      <label for=\"salesExecSelect\">View data for:</label>\n      <span id=\"salesExecSelectDesc\" class=\"visually-hidden\">\n        Selecting a user will display their incentive data.\n      </span>\n      <select \n        id=\"salesExecSelect\" \n        [(ngModel)]=\"selectedSalesExecutiveId\" \n        (change)=\"onSalesExecutiveChange()\" \n        aria-describedby=\"salesExecSelectDesc\">\n        <option [value]=\"currentUser.id\">My Data</option>\n        <option *ngFor=\"let exec of salesExecutives\" [value]=\"exec.id\">{{ exec.name }}</option>\n      </select>\n    </div>\n  </div>\n  \n  <div class=\"header-right\">\n    <span *ngIf=\"currentUser\" class=\"user-info\">\n      {{ currentUser.name }} ({{ currentUser.role }})\n    </span>\n    <button *ngIf=\"currentUser\" class=\"btn-logout\" (click)=\"logout()\">Logout</button>\n    <button *ngIf=\"!currentUser\" class=\"btn-login\" (click)=\"login()\">Login</button>\n  </div>\n</header>\n\n<nav class=\"app-nav\" *ngIf=\"currentUser\">\n  <a *ngFor=\"let mfe of availableMfes\" \n     [routerLink]=\"'/' + mfe.route\" \n     routerLinkActive=\"active\"\n     class=\"nav-link\">\n    {{ mfe.displayName }}\n  </a>\n</nav>\n","import { AfterViewInit, ChangeDetectionStrategy, Component, Input, OnInit, Output, ViewChild, ViewContainerRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport MFE, {InterfaceMfeUrl} from '../../../configs/mfe';\nimport { MFE_CONFIGS } from '../../../configs/mfe';\nimport { loadRemoteModule, LoadRemoteModuleScriptOptions } from '@angular-architects/module-federation';\nimport { MfeLoaderService } from '@org/core-services';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-mfe-wrapper',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './mfe-wrapper.component.html',\n  styleUrl: './mfe-wrapper.component.scss',\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class MfeWrapperComponent implements AfterViewInit{\n  @Input() name:string | null = '';\n  @ViewChild('container', {read:ViewContainerRef, static:true})\n  remoteContainer!:ViewContainerRef\n\n  async ngAfterViewInit(){\n    const options:LoadRemoteModuleScriptOptions | undefined = MFE.map(({remoteName, exposedModule})=>({remoteName, exposedModule})).find(({remoteName})=>remoteName===this.name)\n    if(!options) return;\n    const remote = await loadRemoteModule(options)\n    this.remoteContainer.createComponent(remote.AppComponent)\n  }\n\n  /*constructor(\n    private route: ActivatedRoute,\n    private mfeLoader: MfeLoaderService\n  ) {\n    // Initialize MFE configs\n    this.mfeLoader.setConfigs(MFE_CONFIGS);\n  }\n  \n  async ngAfterViewInit(){\n    // Get MFE name from route data or input\n    const mfeName = this.route.snapshot.data['mfeName'] || this.name;\n    \n    if (!mfeName) {\n      console.error('[MfeWrapperComponent] No MFE name provided');\n      return;\n    }\n\n    // Try new config first\n    const config = this.mfeLoader.getConfigByName(mfeName);\n    if (config) {\n      try {\n        const module = await this.mfeLoader.loadMfe(config);\n        if (module && module.AppComponent) {\n          this.remoteContainer.createComponent(module.AppComponent);\n        }\n      } catch (error) {\n        console.error(`[MfeWrapperComponent] Error loading MFE ${mfeName}:`, error);\n      }\n      return;\n    }\n\n    // Fallback to legacy MFE loading for backward compatibility\n    const options:LoadRemoteModuleScriptOptions | undefined = MFE.map(({remoteName, exposedModule})=>({remoteName, exposedModule})).find(({remoteName})=>remoteName===mfeName)\n    if(!options) {\n      console.error(`[MfeWrapperComponent] MFE ${mfeName} not found in configurations`);\n      return;\n    }\n    const remote = await loadRemoteModule(options)\n    this.remoteContainer.createComponent(remote.AppComponent)\n  }*/\n  \n}","<p>mfe-wrapper works!</p>\n<ng-container #container></ng-container>","import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { RoleService, UserRole } from '@org/core-services';\n\n/**\n * Route guard to check if user has required role\n * @param allowedRoles Array of roles that can access the route\n * @returns CanActivateFn\n */\nexport function roleGuard(allowedRoles: UserRole[]): CanActivateFn {\n  return () => {\n    const roleService = inject(RoleService);\n    const router = inject(Router);\n\n    // DEBUG_LOG: Guard checking access\n    console.log('[RoleGuard] Checking access for allowed roles:', allowedRoles);\n\n    const currentUser = roleService.getCurrentUser();\n\n    if (!currentUser) {\n      // DEBUG_LOG: No user found\n      console.warn('[RoleGuard] No user found, redirecting to home');\n      router.navigate(['/']);\n      return false;\n    }\n\n    // DEBUG_LOG: Current user found\n    console.log('[RoleGuard] Current user:', currentUser.name, 'Role:', currentUser.role);\n\n    if (!allowedRoles.includes(currentUser.role)) {\n      // DEBUG_LOG: User not authorized\n      console.warn(`[RoleGuard] User role ${currentUser.role} not allowed, redirecting to home`);\n      console.warn('[RoleGuard] Allowed roles:', allowedRoles);\n      router.navigate(['/']);\n      return false;\n    }\n\n    // DEBUG_LOG: Access granted\n    console.log('[RoleGuard] Access granted for user:', currentUser.name);\n    return true;\n  };\n}\n\n/**\n * Guard to check if user is admin or team lead\n */\nexport const adminGuard: CanActivateFn = roleGuard([\n  UserRole.SUPER_ADMIN,\n  UserRole.ORG_ADMIN,\n  UserRole.TEAM_LEAD\n]);\n\n/**\n * Guard to check if user is admin only\n */\nexport const superAdminGuard: CanActivateFn = roleGuard([\n  UserRole.SUPER_ADMIN,\n  UserRole.ORG_ADMIN\n]);\n\n/**\n * Guard to check if user has any role (sales executive and above)\n */\nexport const allRolesGuard: CanActivateFn = roleGuard([\n  UserRole.SUPER_ADMIN,\n  UserRole.ORG_ADMIN,\n  UserRole.TEAM_LEAD,\n  UserRole.SALES_EXECUTIVE\n]);\n","import { Component } from '@angular/core';\nimport { MfeWrapperComponent } from '../../components/mfe-wrapper/mfe-wrapper.component';\n\n/**\n * Page component for My Reports MFE\n * Displays incentive reports and analytics for the current user or selected executive\n */\n@Component({\n  selector: 'app-reports-page',\n  standalone: true,\n  imports: [MfeWrapperComponent],\n  templateUrl: './reports-page.component.html',\n  styleUrl: './reports-page.component.scss'\n})\nexport class ReportsPageComponent {\n  mfeName: string = \"myReport\";\n}\n","<div class=\"page-container\">\n  <app-mfe-wrapper [name]=\"mfeName\"></app-mfe-wrapper>\n</div>\n","import { Component } from '@angular/core';\nimport { MfeWrapperComponent } from '../../components/mfe-wrapper/mfe-wrapper.component';\n\n/**\n * Page component for CRUD Rules MFE\n * Allows admins and team leads to manage incentive rules\n */\n@Component({\n  selector: 'app-rules-page',\n  standalone: true,\n  imports: [MfeWrapperComponent],\n  templateUrl: './rules-page.component.html',\n  styleUrl: './rules-page.component.scss'\n})\nexport class RulesPageComponent {\n  mfeName: string = \"crudRules\";\n}\n","<div class=\"page-container\">\n  <app-mfe-wrapper [name]=\"mfeName\"></app-mfe-wrapper>\n</div>\n","import { Component } from '@angular/core';\nimport { MfeWrapperComponent } from '../../components/mfe-wrapper/mfe-wrapper.component';\n\n/**\n * Page component for My Sales MFE\n * Displays sales history for the current user or selected executive\n */\n@Component({\n  selector: 'app-sales-page',\n  standalone: true,\n  imports: [MfeWrapperComponent],\n  templateUrl: './sales-page.component.html',\n  styleUrl: './sales-page.component.scss'\n})\nexport class SalesPageComponent {\n  mfeName: string = \"mySales\";\n}\n","<div class=\"page-container\">\n  <app-mfe-wrapper [name]=\"mfeName\"></app-mfe-wrapper>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface UserProfile {\n  id: string;\n  email: string;\n  name?: string;\n}\n//import { AuthConfig, OAuthService } from 'angular-oauth2-oidc';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private http: HttpClient) {\n    // DEBUG_LOG: AuthenticationService initialized\n    console.log('[AuthenticationService] Service initialized');\n  }\n\n  login() {\n    // DEBUG_LOG: Initiating login\n    console.log('[AuthenticationService] login() called, redirecting to backend login endpoint');\n    // Redirect to backend login endpoint\n    window.location.href = 'http://localhost:4000/auth/login';\n  }\n\n  logout() {\n    // DEBUG_LOG: Initiating logout\n    console.log('[AuthenticationService] logout() called, redirecting to backend logout endpoint');\n    // Redirect to backend logout endpoint\n    window.location.href = 'http://localhost:4000/auth/logout';\n  }\n\n  getUserProfile(): Observable<UserProfile | null> {\n    // DEBUG_LOG: Fetching user profile\n    console.log('[AuthenticationService] getUserProfile() called, fetching from backend');\n    // Fetch user profile from backend /auth/me\n    return this.http.get<UserProfile | null>('http://localhost:4000/auth/me', { withCredentials: true });\n  }\n}","// import { HttpClient, HttpEvent, HttpHandler, HttpHandlerFn, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\n// import { Injectable } from '@angular/core';\n// import { fromEvent, Observable, tap } from 'rxjs';\n\n// const Cache = new Map<string, HttpResponse<any>>();\n\n// export function cacheInterceptor(req: HttpRequest<any>, next: HttpHandlerFn): Observable<HttpEvent<any>> {\n//   console.log(\"Hey jude.. I am in \", req.url);\n\n//   return next(req);\n// }\n\nimport { HttpEvent, HttpHandlerFn, HttpInterceptorFn, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\n\n// export const cacheInterceptor: HttpInterceptorFn = (\n//   req: HttpRequest<any>,\n//   next: HttpHandlerFn\n// ): Observable<HttpEvent<any>> => {\n//   try{\n//     returnFromCache(req, next).then((data)=>{\n//       console.log(\"Data...\",data)\n//     })\n    \n//   }catch(e){\n\n//   }\n//   console.log(\"returning what I got ...\")\n//   return next(req)\n  /*f (req.method !== 'GET') {\n    return next(req);\n  }\n\n  const cacheKey = req.urlWithParams;\n\n  return new Observable<HttpEvent<any>>(observer => {\n    // open/create a cache storage\n    caches.open('http-cache').then(async cache => {\n      // try to match from cache\n      const cachedResponse = await cache.match(cacheKey);\n\n      if (cachedResponse) {\n        const body = await cachedResponse.json();\n        console.log('[CACHE HIT]', cacheKey);\n        observer.next(new HttpResponse({ body, status: 200, url: cacheKey }));\n        observer.complete();\n        return;\n      }\n\n      console.log('[CACHE MISS]', cacheKey);\n\n      // forward to network if not cached\n      next(req).subscribe({\n        next: async event => {\n          if (event instanceof HttpResponse) {\n            // put the response into cache\n            const resToCache = new Response(JSON.stringify(event.body), {\n              headers: { 'Content-Type': 'application/json' }\n            });\n            await cache.put(cacheKey, resToCache);\n            console.log('[CACHE STORE]', cacheKey);\n          }\n          observer.next(event);\n        },\n        error: err => observer.error(err),\n        complete: () => observer.complete(),\n      });\n    });\n  });*/\n//};\n\nexport const cacheInterceptor: HttpInterceptorFn = (\n  req: HttpRequest<any>,\n  next: HttpHandlerFn\n): Observable<HttpEvent<any>> => {\n\n  return new Observable<HttpEvent<any>>(observer=>{\n    let networkSub: Subscription | undefined;\n    (async ()=>{\n      /**\n       * Start of actual Logic\n       */\n      const {url, urlWithParams, method} = req;\n      // const k = await next(req);\n      const cache = await caches.open('http')\n      const cached = await cache.match(urlWithParams)\n      if (cached) {\n        console.log(\"Serve from Cache for\", urlWithParams)\n        let body: any;\n        try { body = await cached.clone().json(); } catch { body = await cached.clone().text(); }\n        observer.next(new HttpResponse({ body, status: cached.status || 200, url: req.urlWithParams }));\n        observer.complete();\n        return;\n      }\n\n      // 🚨 don’t `await next(req)` here — it’s an Observable\n      networkSub = next(req).subscribe({\n        next: async (ev: HttpEvent<any>) => {\n          console.log(\"Cache miss for \",urlWithParams)\n          observer.next(ev);\n          if (ev instanceof HttpResponse && ev.ok) {\n            const resToCache = new Response(JSON.stringify(ev.body), {\n              headers: { 'Content-Type': 'application/json' },\n              status: ev.status,\n              statusText: ev.statusText\n            });\n            await cache.put(req.urlWithParams, resToCache);\n          }\n        },\n        error: (err: any) => observer.error(err),\n        complete: () => observer.complete()\n      });\n      /**\n       * END OF Actual Logic\n       */\n    })();\n    return () => networkSub?.unsubscribe()\n  })\n}\n\n// export const cacheInterceptor: HttpInterceptorFn = (\n//   req: HttpRequest<any>,\n//   next: HttpHandlerFn\n// ): Observable<HttpEvent<any>> => {\n//   return new Observable<HttpEvent<any>>(observer => {\n//     let networkSub: Subscription | undefined;\n\n//     (async () => {\n//       const { url, urlWithParams, method } = req;\n\n//       networkSub = next(req).subscribe({\n//         next: ev => observer.next(ev),   // ✅ ev is HttpEvent<any>\n//         error: err => observer.error(err),\n//         complete: () => observer.complete()\n//       });\n\n//     })();\n\n//     return () => networkSub?.unsubscribe();\n//   });\n// };\n\n// async function returnFromCache(req : HttpRequest<any>, next:HttpHandlerFn){\n  \n  \n//   const k = await caches.open(url)\n//   const resp =  next(req)\n//   console.log(\"Got k as ...\",k,' for url ',url, \"and rsp is ...\",resp)\n//   return resp\n// }","import { bootstrapApplication } from '@angular/platform-browser';\nimport { AppComponent } from './app/app.component';\n//import { importProvidersFrom } from '@angular/core';\nimport { provideHttpClient, withFetch, withInterceptors } from '@angular/common/http';\nimport { provideRouter } from '@angular/router';\nimport { routes } from './app/app.routes';\nimport { cacheInterceptor } from './app/services/cache-api.service';\n//import { OAuthModule } from 'angular-oauth2-oidc';\n\nexport function bootstrap() {\n  return bootstrapApplication(AppComponent, {\n    providers: [\n      // provideHttpClient(),\n      provideRouter(routes),\n      provideHttpClient(\n        withFetch(),\n        withInterceptors([cacheInterceptor]),\n      )\n    ],\n  });\n}\n"],"names":["RouterOutlet","CommonModule","FormsModule","firstValueFrom","MFE_CONFIGS","HeaderComponent","FooterComponent","AppComponent","constructor","auth2","auth","route","router","roleService","mfeLoader","title","setConfigs","ngOnInit","_this","_asyncToGenerator","code","state","error","params","queryParams","Object","keys","length","urlParams","URLSearchParams","window","location","search","get","i0","ɵɵdirectiveInject","i1","AuthenticationService","i2","AuthService","i3","ActivatedRoute","Router","RoleService","MfeLoaderService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","styles","adminGuard","allRolesGuard","RulesPageComponent","SalesPageComponent","ReportsPageComponent","routes","path","component","canActivate","redirectTo","pathMatch","currentYear","Date","getFullYear","FooterComponent_Template","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1","RouterLink","RouterLinkActive","ɵɵproperty","exec_r3","id","ɵɵtextInterpolate","name","ɵɵtwoWayListener","HeaderComponent_div_4_Template_select_ngModelChange_6_listener","$event","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵtwoWayBindingSet","selectedSalesExecutiveId","ɵɵresetView","ɵɵlistener","HeaderComponent_div_4_Template_select_change_6_listener","onSalesExecutiveChange","ɵɵtemplate","HeaderComponent_div_4_option_9_Template","ɵɵtwoWayProperty","currentUser","salesExecutives","ɵɵtextInterpolate2","role","HeaderComponent_button_7_Template_button_click_0_listener","_r4","logout","HeaderComponent_button_8_Template_button_click_0_listener","_r5","login","mfe_r6","displayName","HeaderComponent_nav_9_a_1_Template","availableMfes","dummyDataService","canViewOthers","currentUser$","subscribe","user","canViewOthersData","updateAvailableMfes","loadSalesExecutives","getConfigsForRole","getSalesExecutives","sessionStorage","setItem","dispatchEvent","CustomEvent","detail","salesExecutiveId","setCurrentUser","DummyDataService","HeaderComponent_Template","HeaderComponent_div_4_Template","HeaderComponent_span_6_Template","HeaderComponent_button_7_Template","HeaderComponent_button_8_Template","HeaderComponent_nav_9_Template","NgForOf","NgIf","NgSelectOption","ɵNgSelectMultipleOption","SelectControlValueAccessor","NgControlStatus","NgModel","ViewContainerRef","MFE","loadRemoteModule","MfeWrapperComponent","ngAfterViewInit","options","map","remoteName","exposedModule","find","remote","remoteContainer","createComponent","viewQuery","MfeWrapperComponent_Query","ɵɵelementContainer","changeDetection","inject","UserRole","roleGuard","allowedRoles","console","log","getCurrentUser","warn","navigate","includes","SUPER_ADMIN","ORG_ADMIN","TEAM_LEAD","superAdminGuard","SALES_EXECUTIVE","mfeName","ReportsPageComponent_Template","RulesPageComponent_Template","SalesPageComponent_Template","http","href","getUserProfile","withCredentials","ɵɵinject","HttpClient","factory","ɵfac","providedIn","HttpResponse","Observable","cacheInterceptor","req","next","observer","networkSub","url","urlWithParams","method","cache","caches","open","cached","match","body","clone","json","text","status","complete","_ref2","ev","ok","resToCache","Response","JSON","stringify","headers","statusText","put","_x","apply","arguments","err","unsubscribe","bootstrapApplication","provideHttpClient","withFetch","withInterceptors","provideRouter","bootstrap","providers"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}