(self.webpackChunkshell=self.webpackChunkshell||[]).push([[213],{1213:(p,c,a)=>{a.r(c),a.d(c,{AuthService:()=>S,CoreServicesComponent:()=>m,CoreServicesService:()=>u});var s=a(5565);let u=(()=>{class r{constructor(){}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=s.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();var h=a(467),l=a(2485),d=a(1663);let S=(()=>{class r{constructor(e){this.http=e,this.id="auth of pokemon",this.ISSUER_BASE_URL="https://topfix-wrczmn.us1.zitadel.cloud",this.CLIENT_ID="336777344075263315",this.REDIRECT_URI="https://opensourcekd.github.io/i17e/auth-callback",this.SCOPE="openid profile email",this.TOKEN_KEY="zitadel_token",this.USER_INFO_KEY="zitadel_user_info",this.userSubject=new l.BehaviorSubject(this.getUserInfoFromStorage()),this.user$=this.userSubject.asObservable()}login(e){this.redirectToZitadelLogin()}redirectToZitadelLogin(){const e=new URL(`${this.ISSUER_BASE_URL}/oauth/v2/authorize`),t=this.generateRandomState(),o=this.generateCodeVerifier();sessionStorage.setItem("oauth_state",t),sessionStorage.setItem("code_verifier",o),e.searchParams.append("client_id",this.CLIENT_ID),e.searchParams.append("redirect_uri",this.REDIRECT_URI),e.searchParams.append("response_type","code"),e.searchParams.append("scope",this.SCOPE),e.searchParams.append("state",t),window.location.href=e.toString()}handleCallback(e,t){var o=this;return(0,h.A)(function*(){const i=sessionStorage.getItem("oauth_state");if(t!==i)return console.error("[AuthService] State mismatch - possible CSRF attack"),!1;try{const n=yield o.exchangeCodeForToken(e);o.setToken(n.access_token);const g=o.decodeIdToken(n.id_token);return o.setUserInfo(g),sessionStorage.removeItem("oauth_state"),sessionStorage.removeItem("code_verifier"),console.log("[AuthService] Authentication successful"),!0}catch(n){return console.error("[AuthService] Error exchanging code for token:",n),!1}})()}exchangeCodeForToken(e){var t=this;return(0,h.A)(function*(){const o=`${t.ISSUER_BASE_URL}/oauth/v2/token`,i=new URLSearchParams({grant_type:"authorization_code",code:e,redirect_uri:t.REDIRECT_URI,client_id:t.CLIENT_ID}),n=yield fetch(o,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:i.toString()});if(!n.ok)throw new Error(`Token exchange failed: ${n.statusText}`);return n.json()})()}decodeIdToken(e){try{const t=e.split(".")[1],o=JSON.parse(atob(t));return{sub:o.sub,name:o.name,email:o.email}}catch(t){return console.error("[AuthService] Error decoding ID token:",t),{sub:""}}}logout(){localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_INFO_KEY),this.userSubject.next(null),console.log("[AuthService] User logged out")}getToken(){return localStorage.getItem(this.TOKEN_KEY)}setToken(e){localStorage.setItem(this.TOKEN_KEY,e)}isAuthenticated(){return!!this.getToken()}getUser(){return this.userSubject.value}getUserInfoFromStorage(){const e=localStorage.getItem(this.USER_INFO_KEY);return e?JSON.parse(e):null}setUserInfo(e){localStorage.setItem(this.USER_INFO_KEY,JSON.stringify(e)),this.userSubject.next(e)}generateRandomState(){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}generateCodeVerifier(){const e=new Uint8Array(32);return crypto.getRandomValues(e),Array.from(e,t=>t.toString(16).padStart(2,"0")).join("")}static{this.\u0275fac=function(t){return new(t||r)(s.\u0275\u0275inject(d.HttpClient))}}static{this.\u0275prov=s.\u0275\u0275defineInjectable({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})(),m=(()=>{class r{static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275cmp=s.\u0275\u0275defineComponent({type:r,selectors:[["org-core-services"]],standalone:!0,features:[s.\u0275\u0275StandaloneFeature],decls:2,vars:0,template:function(t,o){1&t&&(s.\u0275\u0275elementStart(0,"p"),s.\u0275\u0275text(1," core-services works! "),s.\u0275\u0275elementEnd())}})}}return r})()}}]);