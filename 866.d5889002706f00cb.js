(self.webpackChunkshell=self.webpackChunkshell||[]).push([[866],{9903:(i,o,t)=>{t.d(o,{W:()=>c,g:()=>s});var s=function(e){return e.SUPER_ADMIN="super-admin",e.ORG_ADMIN="org-admin",e.TEAM_LEAD="team-lead",e.SALES_EXECUTIVE="sales-executive",e}(s||{});function c(e,a){const l={[s.SUPER_ADMIN]:4,[s.ORG_ADMIN]:3,[s.TEAM_LEAD]:2,[s.SALES_EXECUTIVE]:1};return l[e]>=l[a]}},4866:(i,o,t)=>{t.r(o),t.d(o,{RoleService:()=>E});var s=t(2485),e=t(9903),a=t(5565);let E=(()=>{class u{constructor(){this.currentUserSubject=new s.BehaviorSubject(null),this.currentUser$=this.currentUserSubject.asObservable(),this.loadDummyUser()}loadDummyUser(){const r=sessionStorage.getItem("current_user");r?this.currentUserSubject.next(JSON.parse(r)):this.setCurrentUser({id:"1",name:"John Doe",email:"john.doe@example.com",role:e.g.ORG_ADMIN})}setCurrentUser(r){this.currentUserSubject.next(r),r?sessionStorage.setItem("current_user",JSON.stringify(r)):sessionStorage.removeItem("current_user")}getCurrentUser(){return this.currentUserSubject.value}getCurrentUserRole(){return this.currentUserSubject.value?.role||null}hasRole(r){const n=this.getCurrentUserRole();return!!n&&(0,e.W)(n,r)}canViewOthersData(){const r=this.getCurrentUserRole();return r===e.g.SUPER_ADMIN||r===e.g.ORG_ADMIN||r===e.g.TEAM_LEAD}static{this.\u0275fac=function(n){return new(n||u)}}static{this.\u0275prov=a.\u0275\u0275defineInjectable({token:u,factory:u.\u0275fac,providedIn:"root"})}}return u})()}}]);